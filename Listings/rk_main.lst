


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ;; Les deux LEDs sont initialement allumées
    3 00000000         ;; Ce programme lis l'état du bouton poussoir 1 connecté
                       e au port GPIOD broche 6
    4 00000000         ;; Si bouton poussoir fermé ==> fait clignoter les deux 
                       LED1&2 connectée au port GPIOF broches 4&5.
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
    9 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   10 00000000         
   11 00000000 4002C000 
                       QEI0_BASE
                               EQU              0x4002C000  ; right
   12 00000000 4002D000 
                       QEI1_BASE
                               EQU              0x4002D000  ; left
   13 00000000 00000008 
                       QEIPOS_OFFSET
                               EQU              0x008
   14 00000000         
   15 00000000 40028000 
                       PWM_BASE
                               EQU              0x040028000
   16 00000000 40028058 
                       PWM0CMPA
                               EQU              PWM_BASE+0x058
   17 00000000 40028098 
                       PWM1CMPA
                               EQU              PWM_BASE+0x098
   18 00000000         
   19 00000000                 ENTRY
   20 00000000                 EXPORT           __main
   21 00000000         
   22 00000000                 IMPORT           LED_INIT
   23 00000000                 IMPORT           LED_CLIGNOTTEMENT
   24 00000000                 IMPORT           BOUTON_INIT
   25 00000000         
   26 00000000         
   27 00000000                 IMPORT           MOTEUR_INIT
   28 00000000                 IMPORT           MOTEUR_DROIT_ON
   29 00000000                 IMPORT           MOTEUR_DROIT_OFF
   30 00000000                 IMPORT           MOTEUR_DROIT_AVANT
   31 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE
   32 00000000                 IMPORT           MOTEUR_GAUCHE_ON
   33 00000000                 IMPORT           MOTEUR_GAUCHE_OFF
   34 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT
   35 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE
   36 00000000                 IMPORT           MOTEUR_DROIT_INVERSE
   37 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE
   38 00000000                 IMPORT           MOTEUR_STATE
   39 00000000                 IMPORT           LED1_ON
   40 00000000         ;IMPORT LED2_ON



ARM Macro Assembler    Page 2 


   41 00000000                 IMPORT           ENCODER_INIT
   42 00000000                 IMPORT           INTERRUPT_INIT
   43 00000000                 IMPORT           INTERRUPT_HANDLER_0
   44 00000000                 IMPORT           INTERRUPT_HANDLER_1
   45 00000000         
   46 00000000         
   47 00000000         __main
   48 00000000         
   49 00000000         ; 1) Enable the Port D & F clocks as you already do:
   50 00000000 4E32            ldr              r6, =0x400FE108 ; SYSCTL_RCGC2
   51 00000002 F04F 0028       mov              r0, #0x28   ; (0b101000) => Ena
                                                            ble clocks on GPIO 
                                                            D & F
   52 00000006 6030            str              r0, [r6]
   53 00000008 BF00            nop
   54 0000000A BF00            nop
   55 0000000C BF00            nop
   56 0000000E         
   57 0000000E         ; 2) Initialize your hardwar
   58 0000000E F7FF FFFE       BL               BOUTON_INIT
   59 00000012 F7FF FFFE       BL               LED_INIT
   60 00000016 F7FF FFFE       BL               MOTEUR_INIT ; sets up PWM hardw
                                                            are but doesn't tur
                                                            n motors ON yet
   61 0000001A         
   62 0000001A F7FF FFFE       BL               ENCODER_INIT
   63 0000001E F7FF FFFE       BL               INTERRUPT_INIT
   64 00000022         ;BL INTERRUPT_HANDLER_0
   65 00000022         ;BL INTERRUPT_HANDLER_1
   66 00000022         
   67 00000022         
   68 00000022 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT 
                                                            ; pos -> bigger
   69 00000026 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
   70 0000002A         
   71 0000002A 4D29            ldr              r5, = QEI0_BASE+QEIPOS_OFFSET 
                                                            ; right
   72 0000002C F04F 0000       mov              r0, #0
   73 00000030 6028            str              r0,[r5]
   74 00000032         
   75 00000032 4E28            ldr              r6, = QEI1_BASE+QEIPOS_OFFSET 
                                                            ; left 
   76 00000034 F04F 0100       mov              r1, #0
   77 00000038 6031            str              r1, [r6]
   78 0000003A         
   79 0000003A 4E27            ldr              r6, =PWM0CMPA
   80 0000003C F240 1099       mov              r0, #0x199
   81 00000040 6030            str              r0, [r6]
   82 00000042         
   83 00000042 4E26            ldr              r6, =PWM1CMPA
   84 00000044 F240 1099       mov              r0, #0x199
   85 00000048 6030            str              r0, [r6]
   86 0000004A         
   87 0000004A         ;BL LED2_ON
   88 0000004A         
   89 0000004A         loop
   90 0000004A F7FF FFFE       BL               MOTEUR_DROIT_ON
   91 0000004E F7FF FFFE       BL               MOTEUR_GAUCHE_ON
   92 00000052         



ARM Macro Assembler    Page 3 


   93 00000052 4D1F            ldr              r5, = QEI0_BASE+QEIPOS_OFFSET 
                                                            ; right
   94 00000054 6828            ldr              r0, [r5]
   95 00000056         
   96 00000056 F1C0 0260       RSB              r2, r0, #0x60
   97 0000005A 2A05            CMP              r2, #0x5
   98 0000005C BFB8 F000 
              F823             BLLT             PWM_CONFIG_GT5
   99 00000062 BFC8 F000 
              F829             BLGT             PWM_CONFIG_GT20
  100 00000068         
  101 00000068 2860            CMP              r0, #0x60   ; 4 ticks per hole,
                                                             8 holes, 32 * 3 =>
                                                             96 decimal => 60he
                                                            xa
  102 0000006A BFB8 F7FF 
              FFFE             BLLT             MOTEUR_DROIT_AVANT ; Branch if 
                                                            Less Than (N = 1)
  103 00000070 BF08 F7FF 
              FFFE             BLEQ             MOTEUR_DROIT_OFF ; Branch if Eq
                                                            ual (Z = 1)
  104 00000076 BFC8 F7FF 
              FFFE             BLGT             MOTEUR_DROIT_ARRIERE ; Branch i
                                                            f Greater Than (N =
                                                             0 and Z = 0) 
  105 0000007C         
  106 0000007C         
  107 0000007C 4E15            ldr              r6, = QEI1_BASE+QEIPOS_OFFSET 
                                                            ; left 
  108 0000007E 6830            ldr              r0, [r6]
  109 00000080         
  110 00000080 F1C0 0160       RSB              r1, r0, #0x60
  111 00000084 2905            CMP              r1, #0x5
  112 00000086 BFB8 F000 
              F80E             BLLT             PWM_CONFIG_GT5
  113 0000008C BFC8 F000 
              F814             BLGT             PWM_CONFIG_GT20
  114 00000092         
  115 00000092 2860            CMP              r0, #0x60   ; 4 ticks per hole,
                                                             8 holes, 32 * 3 =>
                                                             96 decimal => 60he
                                                            xa
  116 00000094 BFB8 F7FF 
              FFFE             BLLT             MOTEUR_GAUCHE_AVANT ; Branch if
                                                             Less Than (N = 1)
  117 0000009A BF08 F7FF 
              FFFE             BLEQ             MOTEUR_GAUCHE_OFF ; Branch if E
                                                            qual (Z = 1)
  118 000000A0 BFC8 F7FF 
              FFFE             BLGT             MOTEUR_GAUCHE_ARRIERE ; Branch 
                                                            if Greater Than (N 
                                                            = 0 and Z = 0) 
  119 000000A6         
  120 000000A6 E7D0            B                loop
  121 000000A8         
  122 000000A8         PWM_CONFIG_GT5
  123 000000A8 4E0B            ldr              r6, =PWM0CMPA
  124 000000AA F44F 63A0       mov              r3, #0x500
  125 000000AE 6033            str              r3, [r6]



ARM Macro Assembler    Page 4 


  126 000000B0         
  127 000000B0 4E0A            ldr              r6, =PWM1CMPA
  128 000000B2 F44F 63A0       mov              r3, #0x500
  129 000000B6 6033            str              r3, [r6]
  130 000000B8         
  131 000000B8 4770            bx               lr
  132 000000BA         
  133 000000BA         PWM_CONFIG_GT20
  134 000000BA 4E07            ldr              r6, =PWM0CMPA
  135 000000BC F240 1399       mov              r3, #0x199
  136 000000C0 6033            str              r3, [r6]
  137 000000C2         
  138 000000C2 4E06            ldr              r6, =PWM1CMPA
  139 000000C4 F240 1399       mov              r3, #0x199
  140 000000C8 6033            str              r3, [r6]
  141 000000CA         
  142 000000CA 4770            bx               lr
  143 000000CC         
  144 000000CC         
  145 000000CC         
                       
              400FE108 
              4002C008 
              4002D008 
              40028058 
              40028098 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rk_main.d -o.\objects\rk_main.o -I.\RTE\_Target_1 -IC:\U
sers\Yakov\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\User
s\Yakov\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --pre
define="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_V
ERSION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=
.\listings\rk_main.lst RK_Main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file RK_Main.s
   Uses
      None
Comment: .text unused
PWM_CONFIG_GT20 000000BA

Symbol: PWM_CONFIG_GT20
   Definitions
      At line 133 in file RK_Main.s
   Uses
      At line 99 in file RK_Main.s
      At line 113 in file RK_Main.s

PWM_CONFIG_GT5 000000A8

Symbol: PWM_CONFIG_GT5
   Definitions
      At line 122 in file RK_Main.s
   Uses
      At line 98 in file RK_Main.s
      At line 112 in file RK_Main.s

__main 00000000

Symbol: __main
   Definitions
      At line 47 in file RK_Main.s
   Uses
      At line 20 in file RK_Main.s
Comment: __main used once
loop 0000004A

Symbol: loop
   Definitions
      At line 89 in file RK_Main.s
   Uses
      At line 120 in file RK_Main.s
Comment: loop used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

PWM0CMPA 40028058

Symbol: PWM0CMPA
   Definitions
      At line 16 in file RK_Main.s
   Uses
      At line 79 in file RK_Main.s
      At line 123 in file RK_Main.s
      At line 134 in file RK_Main.s

PWM1CMPA 40028098

Symbol: PWM1CMPA
   Definitions
      At line 17 in file RK_Main.s
   Uses
      At line 83 in file RK_Main.s
      At line 127 in file RK_Main.s
      At line 138 in file RK_Main.s

PWM_BASE 40028000

Symbol: PWM_BASE
   Definitions
      At line 15 in file RK_Main.s
   Uses
      At line 16 in file RK_Main.s
      At line 17 in file RK_Main.s

QEI0_BASE 4002C000

Symbol: QEI0_BASE
   Definitions
      At line 11 in file RK_Main.s
   Uses
      At line 71 in file RK_Main.s
      At line 93 in file RK_Main.s

QEI1_BASE 4002D000

Symbol: QEI1_BASE
   Definitions
      At line 12 in file RK_Main.s
   Uses
      At line 75 in file RK_Main.s
      At line 107 in file RK_Main.s

QEIPOS_OFFSET 00000008

Symbol: QEIPOS_OFFSET
   Definitions
      At line 13 in file RK_Main.s
   Uses
      At line 71 in file RK_Main.s
      At line 75 in file RK_Main.s
      At line 93 in file RK_Main.s
      At line 107 in file RK_Main.s

SYSCTL_PERIPH_GPIO 400FE108



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 9 in file RK_Main.s
   Uses
      None
Comment: SYSCTL_PERIPH_GPIO unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BOUTON_INIT 00000000

Symbol: BOUTON_INIT
   Definitions
      At line 24 in file RK_Main.s
   Uses
      At line 58 in file RK_Main.s
Comment: BOUTON_INIT used once
ENCODER_INIT 00000000

Symbol: ENCODER_INIT
   Definitions
      At line 41 in file RK_Main.s
   Uses
      At line 62 in file RK_Main.s
Comment: ENCODER_INIT used once
INTERRUPT_HANDLER_0 00000000

Symbol: INTERRUPT_HANDLER_0
   Definitions
      At line 43 in file RK_Main.s
   Uses
      None
Comment: INTERRUPT_HANDLER_0 unused
INTERRUPT_HANDLER_1 00000000

Symbol: INTERRUPT_HANDLER_1
   Definitions
      At line 44 in file RK_Main.s
   Uses
      None
Comment: INTERRUPT_HANDLER_1 unused
INTERRUPT_INIT 00000000

Symbol: INTERRUPT_INIT
   Definitions
      At line 42 in file RK_Main.s
   Uses
      At line 63 in file RK_Main.s
Comment: INTERRUPT_INIT used once
LED1_ON 00000000

Symbol: LED1_ON
   Definitions
      At line 39 in file RK_Main.s
   Uses
      None
Comment: LED1_ON unused
LED_CLIGNOTTEMENT 00000000

Symbol: LED_CLIGNOTTEMENT
   Definitions
      At line 23 in file RK_Main.s
   Uses
      None
Comment: LED_CLIGNOTTEMENT unused
LED_INIT 00000000

Symbol: LED_INIT



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 22 in file RK_Main.s
   Uses
      At line 59 in file RK_Main.s
Comment: LED_INIT used once
MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 31 in file RK_Main.s
   Uses
      At line 69 in file RK_Main.s
      At line 104 in file RK_Main.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 30 in file RK_Main.s
   Uses
      At line 102 in file RK_Main.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 36 in file RK_Main.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 29 in file RK_Main.s
   Uses
      At line 103 in file RK_Main.s
Comment: MOTEUR_DROIT_OFF used once
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 28 in file RK_Main.s
   Uses
      At line 90 in file RK_Main.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 35 in file RK_Main.s
   Uses
      At line 118 in file RK_Main.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 34 in file RK_Main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

   Uses
      At line 68 in file RK_Main.s
      At line 116 in file RK_Main.s

MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 37 in file RK_Main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 33 in file RK_Main.s
   Uses
      At line 117 in file RK_Main.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 32 in file RK_Main.s
   Uses
      At line 91 in file RK_Main.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 27 in file RK_Main.s
   Uses
      At line 60 in file RK_Main.s
Comment: MOTEUR_INIT used once
MOTEUR_STATE 00000000

Symbol: MOTEUR_STATE
   Definitions
      At line 38 in file RK_Main.s
   Uses
      None
Comment: MOTEUR_STATE unused
20 symbols
369 symbols in table
