


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ;; Les deux LEDs sont initialement allumées
    3 00000000         ;; Ce programme lis l'état du bouton poussoir 1 connecté
                       e au port GPIOD broche 6
    4 00000000         ;; Si bouton poussoir fermé ==> fait clignoter les deux 
                       LED1&2 connectée au port GPIOF broches 4&5.
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
    9 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   10 00000000         
   11 00000000 4002C000 
                       QEI0_BASE
                               EQU              0x4002C000  ; right
   12 00000000 4002D000 
                       QEI1_BASE
                               EQU              0x4002D000  ; left
   13 00000000 00000008 
                       QEIPOS_OFFSET
                               EQU              0x008
   14 00000000         
   15 00000000 40028000 
                       PWM_BASE
                               EQU              0x040028000
   16 00000000 40028058 
                       PWM0CMPA
                               EQU              PWM_BASE+0x058
   17 00000000 40028098 
                       PWM1CMPA
                               EQU              PWM_BASE+0x098
   18 00000000         
   19 00000000                 ENTRY
   20 00000000                 EXPORT           __main
   21 00000000         
   22 00000000                 IMPORT           LED_INIT
   23 00000000                 IMPORT           LED_CLIGNOTTEMENT
   24 00000000                 IMPORT           BOUTON_INIT
   25 00000000         
   26 00000000         
   27 00000000                 IMPORT           MOTEUR_INIT
   28 00000000                 IMPORT           MOTEUR_DROIT_ON
   29 00000000                 IMPORT           MOTEUR_DROIT_OFF
   30 00000000                 IMPORT           MOTEUR_DROIT_AVANT
   31 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE
   32 00000000                 IMPORT           MOTEUR_GAUCHE_ON
   33 00000000                 IMPORT           MOTEUR_GAUCHE_OFF
   34 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT
   35 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE
   36 00000000                 IMPORT           MOTEUR_DROIT_INVERSE
   37 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE
   38 00000000                 IMPORT           MOTEUR_STATE
   39 00000000                 IMPORT           LED1_ON
   40 00000000         ;IMPORT LED2_ON



ARM Macro Assembler    Page 2 


   41 00000000                 IMPORT           ENCODER_INIT
   42 00000000                 IMPORT           INTERRUPT_INIT
   43 00000000                 IMPORT           INTERRUPT_HANDLER_0
   44 00000000                 IMPORT           INTERRUPT_HANDLER_1
   45 00000000                 IMPORT           main_loop
   46 00000000                 IMPORT           init_globals
   47 00000000                 EXPORT           read_position
   48 00000000                 EXPORT           check_flag
   49 00000000                 IMPORT           button_top_flag
   50 00000000                 IMPORT           button_bottom_flag
   51 00000000                 IMPORT           load_list
   52 00000000                 IMPORT           list_A
   53 00000000                 IMPORT           list_B
   54 00000000         
   55 00000000         __main
   56 00000000         
   57 00000000         ; 1) Enable the Port D & F clocks as you already do:
   58 00000000 4E44            ldr              r6, =0x400FE108 ; SYSCTL_RCGC2
   59 00000002 F04F 0028       mov              r0, #0x28   ; (0b101000) => Ena
                                                            ble clocks on GPIO 
                                                            D & F
   60 00000006 6030            str              r0, [r6]
   61 00000008 BF00            nop
   62 0000000A BF00            nop
   63 0000000C BF00            nop
   64 0000000E         
   65 0000000E         ; 2) Initialize your hardwar
   66 0000000E F7FF FFFE       BL               BOUTON_INIT
   67 00000012 F7FF FFFE       BL               LED_INIT
   68 00000016 F7FF FFFE       BL               MOTEUR_INIT ; sets up PWM hardw
                                                            are but doesn't tur
                                                            n motors ON yet
   69 0000001A         
   70 0000001A F7FF FFFE       BL               ENCODER_INIT
   71 0000001E F7FF FFFE       BL               INTERRUPT_INIT
   72 00000022         ;BL INTERRUPT_HANDLER_0
   73 00000022         ;BL INTERRUPT_HANDLER_1
   74 00000022         
   75 00000022         
   76 00000022 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT 
                                                            ; pos -> bigger
   77 00000026 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
   78 0000002A         
   79 0000002A 4D3B            ldr              r5, = QEI0_BASE+QEIPOS_OFFSET 
                                                            ; right
   80 0000002C F04F 0000       mov              r0, #0
   81 00000030 6028            str              r0,[r5]
   82 00000032         
   83 00000032 4E3A            ldr              r6, = QEI1_BASE+QEIPOS_OFFSET 
                                                            ; left 
   84 00000034 F04F 0100       mov              r1, #0
   85 00000038 6031            str              r1, [r6]
   86 0000003A         
   87 0000003A         
   88 0000003A         
   89 0000003A 4E39            ldr              r6, =PWM1CMPA
   90 0000003C F240 1099       mov              r0, #0x199
   91 00000040 6030            str              r0, [r6]
   92 00000042         



ARM Macro Assembler    Page 3 


   93 00000042         ;BL LED2_ON
   94 00000042 F7FF FFFE       bl               init_globals
   95 00000046         ;b loop
   96 00000046         
   97 00000046         
   98 00000046         ;BL MOTEUR_DROIT_ON
   99 00000046         ;BL MOTEUR_GAUCHE_ON
  100 00000046         
  101 00000046         check_flag
  102 00000046 4A37            ldr              r2, = button_top_flag
  103 00000048 6811            ldr              r1, [r2]
  104 0000004A 2900            cmp              r1, #0
  105 0000004C D113            BNE              load_list_a
  106 0000004E         
  107 0000004E 4A36            ldr              r2, = button_bottom_flag
  108 00000050 6811            ldr              r1, [r2]
  109 00000052 2900            cmp              r1, #0
  110 00000054 D113            BNE              load_list_b
  111 00000056 E7FE            b                check_flag
  112 00000058         
  113 00000058         steps
  114 00000058 F7FF FFFE       bl               main_loop
  115 0000005C 4A31            ldr              r2, = button_top_flag
  116 0000005E F04F 0100       mov              r1, #0
  117 00000062 6011            str              r1, [r2]
  118 00000064         
  119 00000064 4A30            ldr              r2, = button_bottom_flag
  120 00000066 F04F 0100       mov              r1, #0
  121 0000006A 6011            str              r1, [r2]
  122 0000006C         
  123 0000006C 2800            cmp              r0, #0x0
  124 0000006E BF08 F7FF 
              FFF2             BLEQ             steps
  125 00000074         
  126 00000074 E7FE            b                check_flag
  127 00000076         
  128 00000076         load_list_a
  129 00000076 482D            ldr              r0, = list_A
  130 00000078 F7FF FFFE       bl               load_list
  131 0000007C E7EC            b                steps
  132 0000007E         
  133 0000007E         load_list_b
  134 0000007E 482C            ldr              r0, = list_B
  135 00000080 F7FF FFFE       bl               load_list
  136 00000084 E7E8            b                steps
  137 00000086         
  138 00000086         
  139 00000086         
  140 00000086 4D24            ldr              r5, = QEI0_BASE+QEIPOS_OFFSET 
                                                            ; right
  141 00000088 6828            ldr              r0, [r5]
  142 0000008A         
  143 0000008A F1C0 0260       RSB              r2, r0, #0x60
  144 0000008E 2A05            CMP              r2, #0x5
  145 00000090 BFB8 F000 
              F82C             BLLT             PWM_CONFIG_GT5
  146 00000096 BFC8 F000 
              F832             BLGT             PWM_CONFIG_GT20
  147 0000009C         



ARM Macro Assembler    Page 4 


  148 0000009C 2860            CMP              r0, #0x60   ; 4 ticks per hole,
                                                             8 holes, 32 * 3 =>
                                                             96 decimal => 60he
                                                            xa
  149 0000009E BFB8 F7FF 
              FFFE             BLLT             MOTEUR_DROIT_AVANT ; Branch if 
                                                            Less Than (N = 1)
  150 000000A4 BF08 F7FF 
              FFFE             BLEQ             MOTEUR_DROIT_OFF ; Branch if Eq
                                                            ual (Z = 1)
  151 000000AA BFC8 F7FF 
              FFFE             BLGT             MOTEUR_DROIT_ARRIERE ; Branch i
                                                            f Greater Than (N =
                                                             0 and Z = 0) 
  152 000000B0         
  153 000000B0         
  154 000000B0 4E1A            ldr              r6, = QEI1_BASE+QEIPOS_OFFSET 
                                                            ; left 
  155 000000B2 6830            ldr              r0, [r6]
  156 000000B4         
  157 000000B4 F1C0 0160       RSB              r1, r0, #0x60
  158 000000B8 2905            CMP              r1, #0x5
  159 000000BA BFB8 F000 
              F817             BLLT             PWM_CONFIG_GT5
  160 000000C0 BFC8 F000 
              F81D             BLGT             PWM_CONFIG_GT20
  161 000000C6         
  162 000000C6 2860            CMP              r0, #0x60   ; 4 ticks per hole,
                                                             8 holes, 32 * 3 =>
                                                             96 decimal => 60he
                                                            xa
  163 000000C8 BFB8 F7FF 
              FFFE             BLLT             MOTEUR_GAUCHE_AVANT ; Branch if
                                                             Less Than (N = 1)
  164 000000CE BF08 F7FF 
              FFFE             BLEQ             MOTEUR_GAUCHE_OFF ; Branch if E
                                                            qual (Z = 1)
  165 000000D4 BFC8 F7FF 
              FFFE             BLGT             MOTEUR_GAUCHE_ARRIERE ; Branch 
                                                            if Greater Than (N 
                                                            = 0 and Z = 0) 
  166 000000DA         
  167 000000DA E7FE            B                check_flag
  168 000000DC         set_pwm
  169 000000DC 4915            ldr              r1, =PWM0CMPA
  170 000000DE F240 1099       mov              r0, #0x199
  171 000000E2 6008            str              r0, [r1]
  172 000000E4         
  173 000000E4         read_position
  174 000000E4         ;ldr r1, [r0, #QEIPOS_OFFSET] ; right
  175 000000E4 F04F 0108       mov              r1, #QEIPOS_OFFSET
  176 000000E8 4408            add              r0, r1
  177 000000EA 6808            ldr              r0, [r1]
  178 000000EC 4770            bx               lr
  179 000000EE         
  180 000000EE         PWM_CONFIG_GT5
  181 000000EE 4E11            ldr              r6, =PWM0CMPA
  182 000000F0 F44F 63A0       mov              r3, #0x500
  183 000000F4 6033            str              r3, [r6]



ARM Macro Assembler    Page 5 


  184 000000F6         
  185 000000F6 4E0A            ldr              r6, =PWM1CMPA
  186 000000F8 F44F 63A0       mov              r3, #0x500
  187 000000FC 6033            str              r3, [r6]
  188 000000FE         
  189 000000FE 4770            bx               lr
  190 00000100         
  191 00000100         PWM_CONFIG_GT20
  192 00000100 4E0C            ldr              r6, =PWM0CMPA
  193 00000102 F240 1399       mov              r3, #0x199
  194 00000106 6033            str              r3, [r6]
  195 00000108         
  196 00000108 4E05            ldr              r6, =PWM1CMPA
  197 0000010A F240 1399       mov              r3, #0x199
  198 0000010E 6033            str              r3, [r6]
  199 00000110         
  200 00000110 4770            bx               lr
  201 00000112         
  202 00000112         
  203 00000112         
                       
              00 00 400FE108 
              4002C008 
              4002D008 
              40028098 
              00000000 
              00000000 
              00000000 
              00000000 
              40028058 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rk_main.d -o.\objects\rk_main.o -I.\RTE\_Target_1 -IC:\U
sers\Yakov\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\User
s\Yakov\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --pre
define="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_V
ERSION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=
.\listings\rk_main.lst RK_Main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file RK_Main.s
   Uses
      None
Comment: .text unused
PWM_CONFIG_GT20 00000100

Symbol: PWM_CONFIG_GT20
   Definitions
      At line 191 in file RK_Main.s
   Uses
      At line 146 in file RK_Main.s
      At line 160 in file RK_Main.s

PWM_CONFIG_GT5 000000EE

Symbol: PWM_CONFIG_GT5
   Definitions
      At line 180 in file RK_Main.s
   Uses
      At line 145 in file RK_Main.s
      At line 159 in file RK_Main.s

__main 00000000

Symbol: __main
   Definitions
      At line 55 in file RK_Main.s
   Uses
      At line 20 in file RK_Main.s
Comment: __main used once
check_flag 00000046

Symbol: check_flag
   Definitions
      At line 101 in file RK_Main.s
   Uses
      At line 48 in file RK_Main.s
      At line 111 in file RK_Main.s
      At line 126 in file RK_Main.s
      At line 167 in file RK_Main.s

load_list_a 00000076

Symbol: load_list_a
   Definitions
      At line 128 in file RK_Main.s
   Uses
      At line 105 in file RK_Main.s
Comment: load_list_a used once
load_list_b 0000007E

Symbol: load_list_b
   Definitions
      At line 133 in file RK_Main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 110 in file RK_Main.s
Comment: load_list_b used once
read_position 000000E4

Symbol: read_position
   Definitions
      At line 173 in file RK_Main.s
   Uses
      At line 47 in file RK_Main.s
Comment: read_position used once
set_pwm 000000DC

Symbol: set_pwm
   Definitions
      At line 168 in file RK_Main.s
   Uses
      None
Comment: set_pwm unused
steps 00000058

Symbol: steps
   Definitions
      At line 113 in file RK_Main.s
   Uses
      At line 124 in file RK_Main.s
      At line 131 in file RK_Main.s
      At line 136 in file RK_Main.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

PWM0CMPA 40028058

Symbol: PWM0CMPA
   Definitions
      At line 16 in file RK_Main.s
   Uses
      At line 169 in file RK_Main.s
      At line 181 in file RK_Main.s
      At line 192 in file RK_Main.s

PWM1CMPA 40028098

Symbol: PWM1CMPA
   Definitions
      At line 17 in file RK_Main.s
   Uses
      At line 89 in file RK_Main.s
      At line 185 in file RK_Main.s
      At line 196 in file RK_Main.s

PWM_BASE 40028000

Symbol: PWM_BASE
   Definitions
      At line 15 in file RK_Main.s
   Uses
      At line 16 in file RK_Main.s
      At line 17 in file RK_Main.s

QEI0_BASE 4002C000

Symbol: QEI0_BASE
   Definitions
      At line 11 in file RK_Main.s
   Uses
      At line 79 in file RK_Main.s
      At line 140 in file RK_Main.s

QEI1_BASE 4002D000

Symbol: QEI1_BASE
   Definitions
      At line 12 in file RK_Main.s
   Uses
      At line 83 in file RK_Main.s
      At line 154 in file RK_Main.s

QEIPOS_OFFSET 00000008

Symbol: QEIPOS_OFFSET
   Definitions
      At line 13 in file RK_Main.s
   Uses
      At line 79 in file RK_Main.s
      At line 83 in file RK_Main.s
      At line 140 in file RK_Main.s
      At line 154 in file RK_Main.s
      At line 175 in file RK_Main.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 9 in file RK_Main.s
   Uses
      None
Comment: SYSCTL_PERIPH_GPIO unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BOUTON_INIT 00000000

Symbol: BOUTON_INIT
   Definitions
      At line 24 in file RK_Main.s
   Uses
      At line 66 in file RK_Main.s
Comment: BOUTON_INIT used once
ENCODER_INIT 00000000

Symbol: ENCODER_INIT
   Definitions
      At line 41 in file RK_Main.s
   Uses
      At line 70 in file RK_Main.s
Comment: ENCODER_INIT used once
INTERRUPT_HANDLER_0 00000000

Symbol: INTERRUPT_HANDLER_0
   Definitions
      At line 43 in file RK_Main.s
   Uses
      None
Comment: INTERRUPT_HANDLER_0 unused
INTERRUPT_HANDLER_1 00000000

Symbol: INTERRUPT_HANDLER_1
   Definitions
      At line 44 in file RK_Main.s
   Uses
      None
Comment: INTERRUPT_HANDLER_1 unused
INTERRUPT_INIT 00000000

Symbol: INTERRUPT_INIT
   Definitions
      At line 42 in file RK_Main.s
   Uses
      At line 71 in file RK_Main.s
Comment: INTERRUPT_INIT used once
LED1_ON 00000000

Symbol: LED1_ON
   Definitions
      At line 39 in file RK_Main.s
   Uses
      None
Comment: LED1_ON unused
LED_CLIGNOTTEMENT 00000000

Symbol: LED_CLIGNOTTEMENT
   Definitions
      At line 23 in file RK_Main.s
   Uses
      None
Comment: LED_CLIGNOTTEMENT unused
LED_INIT 00000000

Symbol: LED_INIT



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 22 in file RK_Main.s
   Uses
      At line 67 in file RK_Main.s
Comment: LED_INIT used once
MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 31 in file RK_Main.s
   Uses
      At line 77 in file RK_Main.s
      At line 151 in file RK_Main.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 30 in file RK_Main.s
   Uses
      At line 149 in file RK_Main.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 36 in file RK_Main.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 29 in file RK_Main.s
   Uses
      At line 150 in file RK_Main.s
Comment: MOTEUR_DROIT_OFF used once
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 28 in file RK_Main.s
   Uses
      None
Comment: MOTEUR_DROIT_ON unused
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 35 in file RK_Main.s
   Uses
      At line 165 in file RK_Main.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 34 in file RK_Main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

   Uses
      At line 76 in file RK_Main.s
      At line 163 in file RK_Main.s

MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 37 in file RK_Main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 33 in file RK_Main.s
   Uses
      At line 164 in file RK_Main.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 32 in file RK_Main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_ON unused
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 27 in file RK_Main.s
   Uses
      At line 68 in file RK_Main.s
Comment: MOTEUR_INIT used once
MOTEUR_STATE 00000000

Symbol: MOTEUR_STATE
   Definitions
      At line 38 in file RK_Main.s
   Uses
      None
Comment: MOTEUR_STATE unused
button_bottom_flag 00000000

Symbol: button_bottom_flag
   Definitions
      At line 50 in file RK_Main.s
   Uses
      At line 107 in file RK_Main.s
      At line 119 in file RK_Main.s

button_top_flag 00000000

Symbol: button_top_flag
   Definitions
      At line 49 in file RK_Main.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
External symbols

      At line 102 in file RK_Main.s
      At line 115 in file RK_Main.s

init_globals 00000000

Symbol: init_globals
   Definitions
      At line 46 in file RK_Main.s
   Uses
      At line 94 in file RK_Main.s
Comment: init_globals used once
list_A 00000000

Symbol: list_A
   Definitions
      At line 52 in file RK_Main.s
   Uses
      At line 129 in file RK_Main.s
Comment: list_A used once
list_B 00000000

Symbol: list_B
   Definitions
      At line 53 in file RK_Main.s
   Uses
      At line 134 in file RK_Main.s
Comment: list_B used once
load_list 00000000

Symbol: load_list
   Definitions
      At line 51 in file RK_Main.s
   Uses
      At line 130 in file RK_Main.s
      At line 135 in file RK_Main.s

main_loop 00000000

Symbol: main_loop
   Definitions
      At line 45 in file RK_Main.s
   Uses
      At line 114 in file RK_Main.s
Comment: main_loop used once
27 symbols
381 symbols in table
