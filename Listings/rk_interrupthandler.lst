


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         ; see page 109
    3 00000000 E000E100 
                       EN0     EQU              0xE000E100  ; page 136-137 numb
                                                            er 13
    4 00000000 E000E104 
                       EN1     EQU              0xE000E104
    5 00000000         
    6 00000000 4002C000 
                       QEI0_BASE
                               EQU              0x4002C000  ; right
    7 00000000 4002D000 
                       QEI1_BASE
                               EQU              0x4002D000  ; left
    8 00000000         
    9 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000
   10 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000
   11 00000000         
   12 00000000 00000010 
                       LED1_BIT
                               EQU              0x10
   13 00000000 00000020 
                       LED2_BIT
                               EQU              0x20
   14 00000000         
   15 00000000 00000028 
                       QEIISC_OFFSET
                               EQU              0x028
   16 00000000 00000418 
                       GPIOMIS_OFFSET
                               EQU              0x418
   17 00000000 00000020 
                       QEIINTEN_OFFSET
                               EQU              0x020
   18 00000000 0000041C 
                       GPIOICR_OFFSET
                               EQU              0x41C
   19 00000000         
   20 00000000 00000008 
                       QEIPOS_OFFSET
                               EQU              0x008
   21 00000000 40028000 
                       PWM_BASE
                               EQU              0x040028000
   22 00000000 40028058 
                       PWM0CMPA
                               EQU              PWM_BASE+0x058
   23 00000000 40028098 
                       PWM1CMPA
                               EQU              PWM_BASE+0x098
   24 00000000         
   25 00000000                 AREA             |.text|, CODE, READONLY
   26 00000000                 ENTRY
   27 00000000                 PRESERVE8        {TRUE}
   28 00000000                 EXPORT           INTERRUPT_INIT



ARM Macro Assembler    Page 2 


   29 00000000                 EXPORT           INTERRUPT_HANDLER_0
   30 00000000                 EXPORT           INTERRUPT_HANDLER_1
   31 00000000                 EXPORT           PORTD_INTERRUPT_HANDLER
   32 00000000                 IMPORT           main_loop
   33 00000000                 IMPORT           check_flag
   34 00000000                 IMPORT           handle_top_button_c
   35 00000000                 IMPORT           handle_bottom_button_c
   36 00000000         
   37 00000000         INTERRUPT_INIT
   38 00000000         
   39 00000000 4E24            ldr              r6, = EN0
   40 00000002 F242 0008       mov              r0, #0x2008
   41 00000006 6030            str              r0, [r6]
   42 00000008         
   43 00000008 4E23            ldr              r6, = EN1
   44 0000000A F04F 0040       mov              r0, #0x40   ; 32 - 36 page 137
   45 0000000E 6030            str              r0, [r6]
   46 00000010         
   47 00000010         ;ldr r6, = QEI0_BASE+QEIINTEN_OFFSET
   48 00000010         ;mov r0, #0x2
   49 00000010         ;str r0, [r6]
   50 00000010         
   51 00000010 4E22            ldr              r6, = QEI1_BASE+QEIINTEN_OFFSET
   52 00000012 F04F 0002       mov              r0, #0x2
   53 00000016 6030            str              r0, [r6]
   54 00000018         
   55 00000018 4770            BX               LR
   56 0000001A         
   57 0000001A         PORTD_INTERRUPT_HANDLER
   58 0000001A 4921            ldr              r1, = GPIO_PORTD_BASE + GPIOMIS
_OFFSET
   59 0000001C 6808            ldr              r0, [r1]
   60 0000001E B500            push             {lr}
   61 00000020         
   62 00000020 B148            cbz              r0, exit_portd_handler ; Exit i
                                                            f no interrupt is a
                                                            ctive
   63 00000022         
   64 00000022 F010 0F40       tst              r0, #0x40   ; Check PD6 
   65 00000026 BF18 F7FF 
              FFFE             blne             handle_top_button_c
   66 0000002C         
   67 0000002C F010 0F80       tst              r0, #0x80   ; Check PD7
   68 00000030 BF18 F7FF 
              FFFE             blne             handle_bottom_button_c
   69 00000036         
   70 00000036         exit_portd_handler
   71 00000036 F85D EB04       pop              {lr}
   72 0000003A 4770            bx               lr
   73 0000003C         
   74 0000003C         handle_top_button
   75 0000003C 4A19            ldr              r2, = GPIO_PORTD_BASE + GPIOICR
_OFFSET
   76 0000003E F04F 0040       mov              r0, #0x40
   77 00000042 6010            str              r0, [r2]
   78 00000044         
   79 00000044 4B18            ldr              r3, = GPIO_PORTF_BASE + (LED1_B
IT << 2)
   80 00000046 6818            ldr              r0, [r3]



ARM Macro Assembler    Page 3 


   81 00000048 F080 0010       eor              r0, r0, #LED1_BIT
   82 0000004C 6018            str              r0, [r3]
   83 0000004E         
   84 0000004E         
   85 0000004E E7F2            b                exit_portd_handler
   86 00000050         
   87 00000050         handle_bottom_button
   88 00000050 4A14            ldr              r2, = GPIO_PORTD_BASE + GPIOICR
_OFFSET
   89 00000052 F04F 0080       mov              r0, #0x80
   90 00000056 6010            str              r0, [r2]
   91 00000058         
   92 00000058 4B13            ldr              r3, = GPIO_PORTF_BASE + (LED1_B
IT << 2)
   93 0000005A 6818            ldr              r0, [r3]
   94 0000005C F080 0010       eor              r0, r0, #LED1_BIT
   95 00000060 6018            str              r0, [r3]
   96 00000062         
   97 00000062 E7E8            b                exit_portd_handler
   98 00000064         
   99 00000064         
  100 00000064         INTERRUPT_HANDLER_0
  101 00000064         
  102 00000064 4911            ldr              r1, = QEI0_BASE+QEIISC_OFFSET
  103 00000066         ;nop
  104 00000066 6808            ldr              r0, [r1]    ;architecture defec
                                                            t, the execution is
                                                             faster than interr
                                                            upt that NVIC has n
                                                            o 
  105 00000068         ;time to remove a flag and we add one additional reading
                        to fix that
  106 00000068 B138            cbz              r0, exit_handler_0 ; if r0 is 0
                                                            , so no flag we jus
                                                            t exit
  107 0000006A F04F 0002       mov              r0, #0x2
  108 0000006E 6008            str              r0, [r1]
  109 00000070         
  110 00000070 4A0D            ldr              r2, =GPIO_PORTF_BASE + (LED1_BI
T << 2)
  111 00000072 6810            ldr              r0, [r2]
  112 00000074 F080 0010       eor              r0, r0, #LED1_BIT
  113 00000078 6010            str              r0, [r2]
  114 0000007A         exit_handler_0
  115 0000007A 4770            BX               LR
  116 0000007C         
  117 0000007C         INTERRUPT_HANDLER_1
  118 0000007C 490C            ldr              r1, = QEI1_BASE+QEIISC_OFFSET
  119 0000007E         ;nop
  120 0000007E 6808            ldr              r0, [r1]    ;architecture defec
                                                            t, the execution is
                                                             faster than interr
                                                            upt that NVIC has n
                                                            o 
  121 00000080         ;time to remove a flag and we add one additional reading
                        to fix that*
  122 00000080 B138            cbz              r0, exit_handler_1
  123 00000082 F04F 0002       mov              r0, #0x2
  124 00000086 6008            str              r0, [r1]



ARM Macro Assembler    Page 4 


  125 00000088         
  126 00000088 4B0A            ldr              r3, =GPIO_PORTF_BASE + (LED2_BI
T << 2)
  127 0000008A 6818            ldr              r0, [r3]
  128 0000008C F080 0020       eor              r0, r0, #LED2_BIT
  129 00000090 6018            str              r0, [r3]
  130 00000092         exit_handler_1
  131 00000092 4770            BX               LR
  132 00000094         
                       
              E000E100 
              E000E104 
              4002D020 
              40007418 
              4000741C 
              40025040 
              4002C028 
              4002D028 
              40025080 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rk_interrupthandler.d -o.\objects\rk_interrupthandler.o 
-I.\RTE\_Target_1 -IC:\Users\Yakov\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSI
S\Core\Include -IC:\Users\Yakov\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\
ARM\ARMCM3\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" 
--predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA 1" --predefine
="ARMCM3 SETA 1" --list=.\listings\rk_interrupthandler.lst RK_InterruptHandler.
s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 25 in file RK_InterruptHandler.s
   Uses
      None
Comment: .text unused
INTERRUPT_HANDLER_0 00000064

Symbol: INTERRUPT_HANDLER_0
   Definitions
      At line 100 in file RK_InterruptHandler.s
   Uses
      At line 29 in file RK_InterruptHandler.s
Comment: INTERRUPT_HANDLER_0 used once
INTERRUPT_HANDLER_1 0000007C

Symbol: INTERRUPT_HANDLER_1
   Definitions
      At line 117 in file RK_InterruptHandler.s
   Uses
      At line 30 in file RK_InterruptHandler.s
Comment: INTERRUPT_HANDLER_1 used once
INTERRUPT_INIT 00000000

Symbol: INTERRUPT_INIT
   Definitions
      At line 37 in file RK_InterruptHandler.s
   Uses
      At line 28 in file RK_InterruptHandler.s
Comment: INTERRUPT_INIT used once
PORTD_INTERRUPT_HANDLER 0000001A

Symbol: PORTD_INTERRUPT_HANDLER
   Definitions
      At line 57 in file RK_InterruptHandler.s
   Uses
      At line 31 in file RK_InterruptHandler.s
Comment: PORTD_INTERRUPT_HANDLER used once
exit_handler_0 0000007A

Symbol: exit_handler_0
   Definitions
      At line 114 in file RK_InterruptHandler.s
   Uses
      At line 106 in file RK_InterruptHandler.s
Comment: exit_handler_0 used once
exit_handler_1 00000092

Symbol: exit_handler_1
   Definitions
      At line 130 in file RK_InterruptHandler.s
   Uses
      At line 122 in file RK_InterruptHandler.s
Comment: exit_handler_1 used once
exit_portd_handler 00000036

Symbol: exit_portd_handler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 70 in file RK_InterruptHandler.s
   Uses
      At line 62 in file RK_InterruptHandler.s
      At line 85 in file RK_InterruptHandler.s
      At line 97 in file RK_InterruptHandler.s

handle_bottom_button 00000050

Symbol: handle_bottom_button
   Definitions
      At line 87 in file RK_InterruptHandler.s
   Uses
      None
Comment: handle_bottom_button unused
handle_top_button 0000003C

Symbol: handle_top_button
   Definitions
      At line 74 in file RK_InterruptHandler.s
   Uses
      None
Comment: handle_top_button unused
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

EN0 E000E100

Symbol: EN0
   Definitions
      At line 3 in file RK_InterruptHandler.s
   Uses
      At line 39 in file RK_InterruptHandler.s
Comment: EN0 used once
EN1 E000E104

Symbol: EN1
   Definitions
      At line 4 in file RK_InterruptHandler.s
   Uses
      At line 43 in file RK_InterruptHandler.s
Comment: EN1 used once
GPIOICR_OFFSET 0000041C

Symbol: GPIOICR_OFFSET
   Definitions
      At line 18 in file RK_InterruptHandler.s
   Uses
      At line 75 in file RK_InterruptHandler.s
      At line 88 in file RK_InterruptHandler.s

GPIOMIS_OFFSET 00000418

Symbol: GPIOMIS_OFFSET
   Definitions
      At line 16 in file RK_InterruptHandler.s
   Uses
      At line 58 in file RK_InterruptHandler.s
Comment: GPIOMIS_OFFSET used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 10 in file RK_InterruptHandler.s
   Uses
      At line 58 in file RK_InterruptHandler.s
      At line 75 in file RK_InterruptHandler.s
      At line 88 in file RK_InterruptHandler.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 9 in file RK_InterruptHandler.s
   Uses
      At line 79 in file RK_InterruptHandler.s
      At line 92 in file RK_InterruptHandler.s
      At line 110 in file RK_InterruptHandler.s
      At line 126 in file RK_InterruptHandler.s

LED1_BIT 00000010

Symbol: LED1_BIT
   Definitions
      At line 12 in file RK_InterruptHandler.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 79 in file RK_InterruptHandler.s
      At line 81 in file RK_InterruptHandler.s
      At line 92 in file RK_InterruptHandler.s
      At line 94 in file RK_InterruptHandler.s
      At line 110 in file RK_InterruptHandler.s
      At line 112 in file RK_InterruptHandler.s

LED2_BIT 00000020

Symbol: LED2_BIT
   Definitions
      At line 13 in file RK_InterruptHandler.s
   Uses
      At line 126 in file RK_InterruptHandler.s
      At line 128 in file RK_InterruptHandler.s

PWM0CMPA 40028058

Symbol: PWM0CMPA
   Definitions
      At line 22 in file RK_InterruptHandler.s
   Uses
      None
Comment: PWM0CMPA unused
PWM1CMPA 40028098

Symbol: PWM1CMPA
   Definitions
      At line 23 in file RK_InterruptHandler.s
   Uses
      None
Comment: PWM1CMPA unused
PWM_BASE 40028000

Symbol: PWM_BASE
   Definitions
      At line 21 in file RK_InterruptHandler.s
   Uses
      At line 22 in file RK_InterruptHandler.s
      At line 23 in file RK_InterruptHandler.s

QEI0_BASE 4002C000

Symbol: QEI0_BASE
   Definitions
      At line 6 in file RK_InterruptHandler.s
   Uses
      At line 102 in file RK_InterruptHandler.s
Comment: QEI0_BASE used once
QEI1_BASE 4002D000

Symbol: QEI1_BASE
   Definitions
      At line 7 in file RK_InterruptHandler.s
   Uses
      At line 51 in file RK_InterruptHandler.s
      At line 118 in file RK_InterruptHandler.s




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

QEIINTEN_OFFSET 00000020

Symbol: QEIINTEN_OFFSET
   Definitions
      At line 17 in file RK_InterruptHandler.s
   Uses
      At line 51 in file RK_InterruptHandler.s
Comment: QEIINTEN_OFFSET used once
QEIISC_OFFSET 00000028

Symbol: QEIISC_OFFSET
   Definitions
      At line 15 in file RK_InterruptHandler.s
   Uses
      At line 102 in file RK_InterruptHandler.s
      At line 118 in file RK_InterruptHandler.s

QEIPOS_OFFSET 00000008

Symbol: QEIPOS_OFFSET
   Definitions
      At line 20 in file RK_InterruptHandler.s
   Uses
      None
Comment: QEIPOS_OFFSET unused
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

check_flag 00000000

Symbol: check_flag
   Definitions
      At line 33 in file RK_InterruptHandler.s
   Uses
      None
Comment: check_flag unused
handle_bottom_button_c 00000000

Symbol: handle_bottom_button_c
   Definitions
      At line 35 in file RK_InterruptHandler.s
   Uses
      At line 68 in file RK_InterruptHandler.s
Comment: handle_bottom_button_c used once
handle_top_button_c 00000000

Symbol: handle_top_button_c
   Definitions
      At line 34 in file RK_InterruptHandler.s
   Uses
      At line 65 in file RK_InterruptHandler.s
Comment: handle_top_button_c used once
main_loop 00000000

Symbol: main_loop
   Definitions
      At line 32 in file RK_InterruptHandler.s
   Uses
      None
Comment: main_loop unused
4 symbols
367 symbols in table
