


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument); 
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (configure les pwms + GPIO)
    3 00000000         
    4 00000000         ;Les pages se réfèrent au datasheet lm3s9b92.pdf
    5 00000000         
    6 00000000         ;Cablage :
    7 00000000         ;pin 10/PD0/PWM0 => input PWM du pont en H DRV8801RT
    8 00000000         ;pin 11/PD1/PWM1 => input Phase_R  du pont en H DRV8801R
                       T
    9 00000000         ;pin 12/PD2   => input SlowDecay commune aux 2 ponts en 
                       H
   10 00000000         ;pin 98/PD5   => input Enable 12v du conv DC/DC 
   11 00000000         ;pin 86/PH0/PWM2 => input PWM du 2nd pont en H
   12 00000000         ;pin 85/PH1/PWM3 => input Phase du 2nd pont en H 
   13 00000000         
   14 00000000         ;; Hexa corresponding values to pin numbers
   15 00000000 00000001 
                       GPIO_0  EQU              0x1
   16 00000000 00000002 
                       GPIO_1  EQU              0x2
   17 00000000 00000004 
                       GPIO_2  EQU              0x4
   18 00000000 00000020 
                       GPIO_5  EQU              0x20
   19 00000000         
   20 00000000         ;; pour enable clock    0x400FE000
   21 00000000 400FE100 
                       SYSCTL_RCGC0
                               EQU              0x400FE100  ;SYSCTL_RCGC0: offs
                                                            et 0x100 (p271 data
                                                            sheet de lm3s9b92.p
                                                            df)
   22 00000000 400FE108 
                       SYSCTL_RCGC2
                               EQU              0x400FE108  ;SYSCTL_RCGC2: offs
                                                            et 0x108 (p291 data
                                                            sheet de lm3s9b92.p
                                                            df)
   23 00000000         
   24 00000000         ;; General-Purpose Input/Outputs (GPIO) configuration
   25 00000000 40007000 
                       PORTD_BASE
                               EQU              0x40007000
   26 00000000 40007000 
                       GPIODATA_D
                               EQU              PORTD_BASE
   27 00000000 40007400 
                       GPIODIR_D
                               EQU              PORTD_BASE+0x00000400
   28 00000000 40007500 
                       GPIODR2R_D
                               EQU              PORTD_BASE+0x00000500
   29 00000000 4000751C 
                       GPIODEN_D
                               EQU              PORTD_BASE+0x0000051C
   30 00000000 4000752C 
                       GPIOPCTL_D
                               EQU              PORTD_BASE+0x0000052C ; GPIO Po



ARM Macro Assembler    Page 2 


                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   31 00000000 40007420 
                       GPIOAFSEL_D
                               EQU              PORTD_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   32 00000000         
   33 00000000 40027000 
                       PORTH_BASE
                               EQU              0x40027000
   34 00000000 40027000 
                       GPIODATA_H
                               EQU              PORTH_BASE
   35 00000000 40027400 
                       GPIODIR_H
                               EQU              PORTH_BASE+0x00000400
   36 00000000 40027500 
                       GPIODR2R_H
                               EQU              PORTH_BASE+0x00000500
   37 00000000 4002751C 
                       GPIODEN_H
                               EQU              PORTH_BASE+0x0000051C
   38 00000000 4002752C 
                       GPIOPCTL_H
                               EQU              PORTH_BASE+0x0000052C ; GPIO Po
                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   39 00000000 40027420 
                       GPIOAFSEL_H
                               EQU              PORTH_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   40 00000000         
   41 00000000         ;; Pulse Width Modulator (PWM) configuration
   42 00000000 40028000 
                       PWM_BASE
                               EQU              0x040028000 ;BASE des Block PWM
                                                             p.1138
   43 00000000 40028008 
                       PWMENABLE
                               EQU              PWM_BASE+0x008 ; p1145
   44 00000000         
   45 00000000         ;Block PWM0 pour sorties PWM0 et PWM1 (moteur 1)
   46 00000000 40028040 
                       PWM0CTL EQU              PWM_BASE+0x040 ;p1167
   47 00000000 40028050 
                       PWM0LOAD
                               EQU              PWM_BASE+0x050
   48 00000000 40028058 
                       PWM0CMPA
                               EQU              PWM_BASE+0x058
   49 00000000 4002805C 
                       PWM0CMPB
                               EQU              PWM_BASE+0x05C



ARM Macro Assembler    Page 3 


   50 00000000 40028060 
                       PWM0GENA
                               EQU              PWM_BASE+0x060
   51 00000000 40028064 
                       PWM0GENB
                               EQU              PWM_BASE+0x064
   52 00000000         
   53 00000000         ;Block PWM1 pour sorties PWM1 et PWM2 (moteur 2)
   54 00000000 40028080 
                       PWM1CTL EQU              PWM_BASE+0x080
   55 00000000 40028090 
                       PWM1LOAD
                               EQU              PWM_BASE+0x090
   56 00000000 40028098 
                       PWM1CMPA
                               EQU              PWM_BASE+0x098
   57 00000000 4002809C 
                       PWM1CMPB
                               EQU              PWM_BASE+0x09C
   58 00000000 400280A0 
                       PWM1GENA
                               EQU              PWM_BASE+0x0A0
   59 00000000 400280A4 
                       PWM1GENB
                               EQU              PWM_BASE+0x0A4
   60 00000000         
   61 00000000         
   62 00000000 00000199 
                       VITESSE EQU              0x199       ; Valeures plus pet
                                                            ites => Vitesse plu
                                                            s rapide exemple 0x
                                                            192
   63 00000000         ; Valeures plus grandes => Vitesse moins rapide exemple 
                       0x1B2
   64 00000000         
   65 00000000         
   66 00000000                 AREA             |.text|, CODE, READONLY
   67 00000000                 ENTRY
   68 00000000         
   69 00000000         ;; The EXPORT command specifies that a symbol can be acc
                       essed by other shared objects or executables.
   70 00000000                 EXPORT           MOTEUR_INIT
   71 00000000                 EXPORT           MOTEUR_DROIT_ON
   72 00000000                 EXPORT           MOTEUR_DROIT_OFF
   73 00000000                 EXPORT           MOTEUR_DROIT_AVANT
   74 00000000                 EXPORT           MOTEUR_DROIT_ARRIERE
   75 00000000                 EXPORT           MOTEUR_DROIT_INVERSE
   76 00000000                 EXPORT           MOTEUR_GAUCHE_ON
   77 00000000                 EXPORT           MOTEUR_GAUCHE_OFF
   78 00000000                 EXPORT           MOTEUR_GAUCHE_AVANT
   79 00000000                 EXPORT           MOTEUR_GAUCHE_ARRIERE
   80 00000000                 EXPORT           MOTEUR_GAUCHE_INVERSE
   81 00000000                 EXPORT           MOTEUR_STATE
   82 00000000         
   83 00000000         
   84 00000000         MOTEUR_STATE
   85 00000000 00000000        DCD              0           ; Reserve 4 bytes (
                                                            an integer). 0 => m
                                                            otors OFF, 1 => ON



ARM Macro Assembler    Page 4 


   86 00000004         
   87 00000004         MOTEUR_INIT
   88 00000004 4E5C            ldr              r6, = SYSCTL_RCGC0
   89 00000006 6830            ldr              r0, [R6]
   90 00000008 F440 1080       ORR              r0, r0, #0x00100000 ;;bit 20 = 
                                                            PWM recoit clock: O
                                                            N (p271) 
   91 0000000C 6030            str              r0, [r6]
   92 0000000E         
   93 0000000E         ;ROM_SysCtlPWMClockSet(SYSCTL_PWMDIV_1);PWM clock is pro
                       cessor clock /1
   94 0000000E         ;Je ne fais rien car par defaut = OK!!
   95 0000000E         ;*(int *) (0x400FE060)= *(int *)(0x400FE060)...;
   96 0000000E         
   97 0000000E         ;RCGC2 :  Enable port D GPIO(p291 ) car Moteur Droit sur
                        port D 
   98 0000000E 4E5B            ldr              r6, = SYSCTL_RCGC2
   99 00000010 6830            ldr              r0, [R6]
  100 00000012 F040 0008       ORR              r0, r0, #0x08 ;; Enable port D 
                                                            GPIO 
  101 00000016 6030            str              r0, [r6]
  102 00000018         
  103 00000018         ;MOT2 : RCGC2 :  Enable port H GPIO  (2eme moteurs)
  104 00000018 4E58            ldr              r6, = SYSCTL_RCGC2
  105 0000001A 6830            ldr              r0, [R6]
  106 0000001C F040 0080       ORR              r0, r0, #0x80 ;; Enable port H 
                                                            GPIO 
  107 00000020 6030            str              r0, [r6]
  108 00000022         
  109 00000022 BF00            nop
  110 00000024 BF00            nop
  111 00000026 BF00            nop
  112 00000028         
  113 00000028         ;;Pin muxing pour PWM, port D, reg. GPIOPCTL(p444), 4bit
                       s de PCM0=0001<=>PWM (voir p1261)
  114 00000028         ;;il faut mettre 1 pour avoir PD0=PWM0 et PD1=PWM1
  115 00000028 4E55            ldr              r6, = GPIOPCTL_D
  116 0000002A         ;ldr r0, [R6]   ;; *(int *)(0x40007000+0x0000052C)=1;
  117 0000002A         ;ORR r0, r0, #0x01 ;; Port D, pin 1 = PWM 
  118 0000002A F04F 0001       mov              r0, #0x01
  119 0000002E 6030            str              r0, [r6]
  120 00000030         
  121 00000030         ;;MOT2 : Pin muxing pour PWM, port H, reg. GPIOPCTL(p444
                       ), 4bits de PCM0=0001<=>PWM (voir p1261)
  122 00000030         ;;il faut mettre mux = 2 pour avoir PH0=PWM2 et PH1=PWM3
                       
  123 00000030 4E54            ldr              r6, = GPIOPCTL_H
  124 00000032 F04F 0002       mov              r0, #0x02
  125 00000036 6030            str              r0, [r6]
  126 00000038         
  127 00000038         ;;Alternate Function Select (p 426), PD0 utilise alernat
                       e fonction (PWM au dessus)
  128 00000038         ;;donc PD0 = 1
  129 00000038 4E53            ldr              r6, = GPIOAFSEL_D
  130 0000003A 6830            ldr              r0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0
                                                            0000420) | 0x000000
                                                            01;



ARM Macro Assembler    Page 5 


  131 0000003C F040 0001       ORR              r0, r0, #0x01 ;
  132 00000040 6030            str              r0, [r6]
  133 00000042         
  134 00000042         ;;MOT2 : Alternate Function Select (p 426), PH0 utilise 
                       PWM donc Alternate funct
  135 00000042         ;;donc PH0 = 1
  136 00000042 4E52            ldr              r6, = GPIOAFSEL_H
  137 00000044 6830            ldr              r0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0
                                                            0000420) | 0x000000
                                                            01;
  138 00000046 F040 0001       ORR              r0, r0, #0x01 ;
  139 0000004A 6030            str              r0, [r6]
  140 0000004C         
  141 0000004C         ;;-----------PWM0 pour moteur 1 connecté à PD0
  142 0000004C         ;;PWM0 produit PWM0 et PWM1 output
  143 0000004C         ;;Config Modes PWM0 + mode GenA + mode GenB
  144 0000004C 4E50            ldr              r6, = PWM0CTL
  145 0000004E F04F 0002       mov              r0, #2      ;Mode up-down-up-do
                                                            wn, pas synchro
  146 00000052 6030            str              r0, [r6]
  147 00000054         
  148 00000054 4E4F            ldr              r6, =PWM0GENA ;en decomptage, q
                                                            d comparateurA = co
                                                            mpteur => sortie pw
                                                            mA=0
  149 00000056         ;en comptage croissant, qd comparateurA = compteur => so
                       rtie pwmA=1
  150 00000056 F04F 00B0       mov              r0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:r
                                                            ien), ACTCMPBU=00(B
                                                             up rien)
  151 0000005A 6030            str              r0, [r6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi
                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00  
  152 0000005C         
  153 0000005C 4E4E            ldr              r6, =PWM0GENB ;en comptage croi
                                                            ssant, qd comparate
                                                            urB = compteur => s
                                                            ortie pwmA=1
  154 0000005E F44F 6030       mov              r0, #0x0B00 ;en decomptage, qd 
                                                            comparateurB = comp
                                                            teur => sortie pwmB
                                                            =0
  155 00000062 6030            str              r0, [r6]
  156 00000064         ;Config Compteur, comparateur A et comparateur B
  157 00000064         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  158 00000064         ;;en mesure : SysCtlClockGet=0F42400h, /16=0x3E8, 
  159 00000064         ;;on divise par 2 car moteur 6v sur alim 12v
  160 00000064 4E4D            ldr              r6, =PWM0LOAD ;PWM0LOAD=periode
                                                            /2 =0x1F4
  161 00000066 F44F 70FA       mov              r0, #0x1F4
  162 0000006A 6030            str              r0,[r6]
  163 0000006C         
  164 0000006C 4E4C            ldr              r6, =PWM0CMPA ;Valeur rapport c
                                                            yclique : pour 10% 



ARM Macro Assembler    Page 6 


                                                            => 1C2h si clock = 
                                                            0F42400
  165 0000006E F240 1099       mov              r0, #VITESSE
  166 00000072 6030            str              r0, [r6]
  167 00000074         
  168 00000074 4E4B            ldr              r6, =PWM0CMPB ;PWM0CMPB recoit 
                                                            meme valeur. (rappo
                                                            rt cyclique depend 
                                                            de CMPA)
  169 00000076 F44F 70FA       mov              r0, #0x1F4
  170 0000007A 6030            str              r0, [r6]
  171 0000007C         
  172 0000007C         ;Control PWM : active PWM Generator 0 (p1167): Enable+up
                       /down + Enable counter debug mod
  173 0000007C 4E44            ldr              r6, =PWM0CTL
  174 0000007E 6830            ldr              r0, [r6]
  175 00000080 F040 0007       ORR              r0, r0, #0x07
  176 00000084 6030            str              r0, [r6]
  177 00000086         
  178 00000086         ;;-----------PWM2 pour moteur 2 connecté à PH0
  179 00000086         ;;PWM1block produit PWM2 et PWM3 output
  180 00000086         ;;Config Modes PWM2 + mode GenA + mode GenB
  181 00000086 4E48            ldr              r6, = PWM1CTL
  182 00000088 F04F 0002       mov              r0, #2      ;Mode up-down-up-do
                                                            wn, pas synchro
  183 0000008C 6030            str              r0, [r6]    ;*(int *)(0x4002800
                                                            0+0x040)=2;
  184 0000008E         
  185 0000008E 4E47            ldr              r6, =PWM1GENA ;en decomptage, q
                                                            d comparateurA = co
                                                            mpteur => sortie pw
                                                            mA=0
  186 00000090         ;en comptage croissant, qd comparateurA = compteur => so
                       rtie pwmA=1
  187 00000090 F04F 00B0       mov              r0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:r
                                                            ien), ACTCMPBU=00(B
                                                             up rien)
  188 00000094 6030            str              r0, [r6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi
                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00  
  189 00000096         
  190 00000096         ;*(int *)(0x40028000+0x060)=0x0B0; //
  191 00000096 4E46            ldr              r6, =PWM1GENB ;*(int *)(0x40028
                                                            000+0x064)=0x0B00;
  192 00000098 F44F 6030       mov              r0, #0x0B00 ;en decomptage, qd 
                                                            comparateurB = comp
                                                            teur => sortie pwmB
                                                            =0
  193 0000009C 6030            str              r0, [r6]    ;en comptage croiss
                                                            ant, qd comparateur
                                                            B = compteur => sor
                                                            tie pwmA=1
  194 0000009E         ;Config Compteur, comparateur A et comparateur B
  195 0000009E         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  196 0000009E         ;;en mesure : SysCtlClockGet=0F42400h, /16=0x3E8, 
  197 0000009E         ;;on divise par 2 car moteur 6v sur alim 12v



ARM Macro Assembler    Page 7 


  198 0000009E         ;*(int *)(0x40028000+0x050)=0x1F4; //PWM0LOAD=periode/2 
                       =0x1F4
  199 0000009E 4E45            ldr              r6, =PWM1LOAD
  200 000000A0 F44F 70FA       mov              r0, #0x1F4
  201 000000A4 6030            str              r0,[r6]
  202 000000A6         
  203 000000A6 4E44            ldr              r6, =PWM1CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  204 000000A8 F240 1099       mov              r0, #VITESSE
  205 000000AC 6030            str              r0, [r6]    ;*(int *)(0x4002800
                                                            0+0x058)=0x01C2;
  206 000000AE         
  207 000000AE 4E43            ldr              r6, =PWM1CMPB ;PWM0CMPB recoit 
                                                            meme valeur. (CMPA 
                                                            depend du rapport c
                                                            yclique)
  208 000000B0 F44F 70FA       mov              r0, #0x1F4  ; *(int *)(0x400280
                                                            00+0x05C)=0x1F4; 
  209 000000B4 6030            str              r0, [r6]
  210 000000B6         
  211 000000B6         ;Control PWM : active PWM Generator 0 (p1167): Enable+up
                       /down + Enable counter debug mod
  212 000000B6 4E3C            ldr              r6, =PWM1CTL
  213 000000B8 6830            ldr              r0, [r6]    ;*(int *) (0x400280
                                                            00+0x40)= *(int *)(
                                                            0x40028000+0x40) | 
                                                            0x07;
  214 000000BA F040 0007       ORR              r0, r0, #0x07
  215 000000BE 6030            str              r0, [r6]
  216 000000C0         
  217 000000C0         ;;-----Fin config des PWMs   
  218 000000C0         
  219 000000C0         ;PORT D OUTPUT pin0 (pwm)=pin1(direction)=pin2(slow deca
                       y)=pin5(12v enable)
  220 000000C0 4E3F            ldr              r6, =GPIODIR_D
  221 000000C2 6830            ldr              r0, [r6]
  222 000000C4 F040 0027       ORR              r0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  223 000000C8 6030            str              r0,[r6]
  224 000000CA         ;Port D, 2mA les meme
  225 000000CA 4E3E            ldr              r6, =GPIODR2R_D ; 
  226 000000CC 6830            ldr              r0, [r6]
  227 000000CE F040 0027       ORR              r0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  228 000000D2 6030            str              r0,[r6]
  229 000000D4         ;Port D, Digital Enable
  230 000000D4 4E3C            ldr              r6, =GPIODEN_D ;
  231 000000D6 6830            ldr              r0, [r6]
  232 000000D8 F040 0027       ORR              r0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  233 000000DC 6030            str              r0,[r6]
  234 000000DE         ;Port D : mise à 1 de slow Decay et 12V et mise à 0 pour
                        dir et pwm
  235 000000DE 4E3B            ldr              r6, =(GPIODATA_D+((GPIO_0+GPIO_
1+GPIO_2+GPIO_5)<<2))
  236 000000E0 F04F 0024       mov              r0, #(GPIO_2+GPIO_5) ; #0x24
  237 000000E4 6030            str              r0,[r6]



ARM Macro Assembler    Page 8 


  238 000000E6         
  239 000000E6         ;MOT2, PH1 pour sens moteur ouput
  240 000000E6 4E3A            ldr              r6, =GPIODIR_H
  241 000000E8 F04F 0003       mov              r0, #0x03   ; 
  242 000000EC 6030            str              r0,[r6]
  243 000000EE         ;Port H, 2mA les meme
  244 000000EE 4E39            ldr              r6, =GPIODR2R_H
  245 000000F0 F04F 0003       mov              r0, #0x03
  246 000000F4 6030            str              r0,[r6]
  247 000000F6         ;Port H, Digital Enable
  248 000000F6 4E38            ldr              r6, =GPIODEN_H
  249 000000F8 F04F 0003       mov              r0, #0x03
  250 000000FC 6030            str              r0,[r6]
  251 000000FE         ;Port H : mise à 1 pour dir 
  252 000000FE 4E37            ldr              r6, =(GPIODATA_H +(GPIO_1<<2))
  253 00000100 F04F 0002       mov              r0, #0x02
  254 00000104 6030            str              r0,[r6]
  255 00000106         
  256 00000106 4770            BX               LR          ; FIN du sous progr
                                                            amme d'init.
  257 00000108         
  258 00000108         ;Enable PWM0 (bit 0) et PWM2 (bit 2) p1145 
  259 00000108         ;Attention ici c'est les sorties PWM0 et PWM2
  260 00000108         ;qu'on controle, pas les blocks PWM0 et PWM1!!!
  261 00000108         MOTEUR_DROIT_ON
  262 00000108         ;Enable sortie PWM0 (bit 0), p1145 
  263 00000108 4E35            ldr              r6, =PWMENABLE
  264 0000010A 6830            ldr              r0, [r6]
  265 0000010C F040 0001       orr              r0, #0x01   ;bit 0 à 1
  266 00000110 6030            str              r0, [r6]
  267 00000112 4770            BX               LR
  268 00000114         
  269 00000114         MOTEUR_DROIT_OFF
  270 00000114 4E32            ldr              r6, =PWMENABLE
  271 00000116 6830            ldr              r0, [r6]
  272 00000118 F000 000E       and              r0, #0x0E   ;bit 0 à 0
  273 0000011C 6030            str              r0, [r6]
  274 0000011E 4770            BX               LR
  275 00000120         
  276 00000120         MOTEUR_GAUCHE_ON
  277 00000120 4E2F            ldr              r6, =PWMENABLE
  278 00000122 6830            ldr              r0, [r6]
  279 00000124 F040 0004       orr              r0, #0x04   ;bit 2 à 1
  280 00000128 6030            str              r0, [r6]
  281 0000012A 4770            BX               LR
  282 0000012C         
  283 0000012C         MOTEUR_GAUCHE_OFF
  284 0000012C 4E2C            ldr              r6, =PWMENABLE
  285 0000012E 6830            ldr              r0, [r6]
  286 00000130 F000 000B       and              r0, #0x0B   ;bit 2 à 0
  287 00000134 6030            str              r0, [r6]
  288 00000136 4770            BX               LR
  289 00000138         
  290 00000138         MOTEUR_DROIT_ARRIERE
  291 00000138         ;Inverse Direction (GPIO_D1)
  292 00000138 4E2A            ldr              r6, =(GPIODATA_D+(GPIO_1<<2))
  293 0000013A F04F 0000       mov              r0, #0
  294 0000013E 6030            str              r0,[r6]
  295 00000140 4770            BX               LR



ARM Macro Assembler    Page 9 


  296 00000142         
  297 00000142         MOTEUR_DROIT_AVANT
  298 00000142         ;Inverse Direction (GPIO_D1)
  299 00000142 4E28            ldr              r6, =(GPIODATA_D+(GPIO_1<<2))
  300 00000144 F04F 0002       mov              r0, #2
  301 00000148 6030            str              r0,[r6]
  302 0000014A 4770            BX               LR
  303 0000014C         
  304 0000014C         MOTEUR_GAUCHE_ARRIERE
  305 0000014C         ;Inverse Direction (GPIO_D1)
  306 0000014C 4E23            ldr              r6, =(GPIODATA_H+(GPIO_1<<2))
  307 0000014E F04F 0002       mov              r0, #2      ; contraire du mote
                                                            ur Droit
  308 00000152 6030            str              r0,[r6]
  309 00000154 4770            BX               LR
  310 00000156         
  311 00000156         MOTEUR_GAUCHE_AVANT
  312 00000156         ;Inverse Direction (GPIO_D1)
  313 00000156 4E21            ldr              r6, =(GPIODATA_H+(GPIO_1<<2))
  314 00000158 F04F 0000       mov              r0, #0
  315 0000015C 6030            str              r0,[r6]
  316 0000015E 4770            BX               LR
  317 00000160         
  318 00000160         MOTEUR_DROIT_INVERSE
  319 00000160         ;Inverse Direction (GPIO_D1)
  320 00000160 4E20            ldr              r6, =(GPIODATA_D+(GPIO_1<<2))
  321 00000162 6831            ldr              r1, [r6]
  322 00000164 F081 0002       EOR              r0, r1, #GPIO_1
  323 00000168 6030            str              r0,[r6]
  324 0000016A 4770            BX               LR
  325 0000016C         
  326 0000016C         MOTEUR_GAUCHE_INVERSE
  327 0000016C         ;Inverse Direction (GPIO_D1)
  328 0000016C 4E1B            ldr              r6, =(GPIODATA_H+(GPIO_1<<2))
  329 0000016E 6831            ldr              r1, [r6]
  330 00000170 F081 0002       EOR              r0, r1, #GPIO_1
  331 00000174 6030            str              r0,[r6]
  332 00000176 4770            BX               LR
  333 00000178         
  334 00000178                 END
              400FE100 
              400FE108 
              4000752C 
              4002752C 
              40007420 
              40027420 
              40028040 
              40028060 
              40028064 
              40028050 
              40028058 
              4002805C 
              40028080 
              400280A0 
              400280A4 
              40028090 
              40028098 
              4002809C 
              40007400 



ARM Macro Assembler    Page 10 


              40007500 
              4000751C 
              4000709C 
              40027400 
              40027500 
              4002751C 
              40027008 
              40028008 
              40007008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rk_config_moteur.d -o.\objects\rk_config_moteur.o -I.\RT
E\_Target_1 -IC:\Users\Yakov\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core
\Include -IC:\Users\Yakov\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\AR
MCM3\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --pred
efine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMC
M3 SETA 1" --list=.\listings\rk_config_moteur.lst RK_Config_Moteur.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 66 in file RK_Config_Moteur.s
   Uses
      None
Comment: .text unused
MOTEUR_DROIT_ARRIERE 00000138

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 290 in file RK_Config_Moteur.s
   Uses
      At line 74 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_ARRIERE used once
MOTEUR_DROIT_AVANT 00000142

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 297 in file RK_Config_Moteur.s
   Uses
      At line 73 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000160

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 318 in file RK_Config_Moteur.s
   Uses
      At line 75 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_INVERSE used once
MOTEUR_DROIT_OFF 00000114

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 269 in file RK_Config_Moteur.s
   Uses
      At line 72 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_OFF used once
MOTEUR_DROIT_ON 00000108

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 261 in file RK_Config_Moteur.s
   Uses
      At line 71 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 0000014C

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 304 in file RK_Config_Moteur.s
   Uses
      At line 79 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000156

Symbol: MOTEUR_GAUCHE_AVANT



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 311 in file RK_Config_Moteur.s
   Uses
      At line 78 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 0000016C

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 326 in file RK_Config_Moteur.s
   Uses
      At line 80 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_INVERSE used once
MOTEUR_GAUCHE_OFF 0000012C

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 283 in file RK_Config_Moteur.s
   Uses
      At line 77 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 00000120

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 276 in file RK_Config_Moteur.s
   Uses
      At line 76 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000004

Symbol: MOTEUR_INIT
   Definitions
      At line 87 in file RK_Config_Moteur.s
   Uses
      At line 70 in file RK_Config_Moteur.s
Comment: MOTEUR_INIT used once
MOTEUR_STATE 00000000

Symbol: MOTEUR_STATE
   Definitions
      At line 84 in file RK_Config_Moteur.s
   Uses
      At line 81 in file RK_Config_Moteur.s
Comment: MOTEUR_STATE used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOAFSEL_D 40007420

Symbol: GPIOAFSEL_D
   Definitions
      At line 31 in file RK_Config_Moteur.s
   Uses
      At line 129 in file RK_Config_Moteur.s
Comment: GPIOAFSEL_D used once
GPIOAFSEL_H 40027420

Symbol: GPIOAFSEL_H
   Definitions
      At line 39 in file RK_Config_Moteur.s
   Uses
      At line 136 in file RK_Config_Moteur.s
Comment: GPIOAFSEL_H used once
GPIODATA_D 40007000

Symbol: GPIODATA_D
   Definitions
      At line 26 in file RK_Config_Moteur.s
   Uses
      At line 235 in file RK_Config_Moteur.s
      At line 292 in file RK_Config_Moteur.s
      At line 299 in file RK_Config_Moteur.s
      At line 320 in file RK_Config_Moteur.s

GPIODATA_H 40027000

Symbol: GPIODATA_H
   Definitions
      At line 34 in file RK_Config_Moteur.s
   Uses
      At line 252 in file RK_Config_Moteur.s
      At line 306 in file RK_Config_Moteur.s
      At line 313 in file RK_Config_Moteur.s
      At line 328 in file RK_Config_Moteur.s

GPIODEN_D 4000751C

Symbol: GPIODEN_D
   Definitions
      At line 29 in file RK_Config_Moteur.s
   Uses
      At line 230 in file RK_Config_Moteur.s
Comment: GPIODEN_D used once
GPIODEN_H 4002751C

Symbol: GPIODEN_H
   Definitions
      At line 37 in file RK_Config_Moteur.s
   Uses
      At line 248 in file RK_Config_Moteur.s
Comment: GPIODEN_H used once
GPIODIR_D 40007400

Symbol: GPIODIR_D
   Definitions
      At line 27 in file RK_Config_Moteur.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 220 in file RK_Config_Moteur.s
Comment: GPIODIR_D used once
GPIODIR_H 40027400

Symbol: GPIODIR_H
   Definitions
      At line 35 in file RK_Config_Moteur.s
   Uses
      At line 240 in file RK_Config_Moteur.s
Comment: GPIODIR_H used once
GPIODR2R_D 40007500

Symbol: GPIODR2R_D
   Definitions
      At line 28 in file RK_Config_Moteur.s
   Uses
      At line 225 in file RK_Config_Moteur.s
Comment: GPIODR2R_D used once
GPIODR2R_H 40027500

Symbol: GPIODR2R_H
   Definitions
      At line 36 in file RK_Config_Moteur.s
   Uses
      At line 244 in file RK_Config_Moteur.s
Comment: GPIODR2R_H used once
GPIOPCTL_D 4000752C

Symbol: GPIOPCTL_D
   Definitions
      At line 30 in file RK_Config_Moteur.s
   Uses
      At line 115 in file RK_Config_Moteur.s
Comment: GPIOPCTL_D used once
GPIOPCTL_H 4002752C

Symbol: GPIOPCTL_H
   Definitions
      At line 38 in file RK_Config_Moteur.s
   Uses
      At line 123 in file RK_Config_Moteur.s
Comment: GPIOPCTL_H used once
GPIO_0 00000001

Symbol: GPIO_0
   Definitions
      At line 15 in file RK_Config_Moteur.s
   Uses
      At line 222 in file RK_Config_Moteur.s
      At line 227 in file RK_Config_Moteur.s
      At line 232 in file RK_Config_Moteur.s
      At line 235 in file RK_Config_Moteur.s

GPIO_1 00000002

Symbol: GPIO_1
   Definitions
      At line 16 in file RK_Config_Moteur.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 222 in file RK_Config_Moteur.s
      At line 227 in file RK_Config_Moteur.s
      At line 232 in file RK_Config_Moteur.s
      At line 235 in file RK_Config_Moteur.s
      At line 252 in file RK_Config_Moteur.s
      At line 292 in file RK_Config_Moteur.s
      At line 299 in file RK_Config_Moteur.s
      At line 306 in file RK_Config_Moteur.s
      At line 313 in file RK_Config_Moteur.s
      At line 320 in file RK_Config_Moteur.s
      At line 322 in file RK_Config_Moteur.s
      At line 328 in file RK_Config_Moteur.s
      At line 330 in file RK_Config_Moteur.s

GPIO_2 00000004

Symbol: GPIO_2
   Definitions
      At line 17 in file RK_Config_Moteur.s
   Uses
      At line 222 in file RK_Config_Moteur.s
      At line 227 in file RK_Config_Moteur.s
      At line 232 in file RK_Config_Moteur.s
      At line 235 in file RK_Config_Moteur.s
      At line 236 in file RK_Config_Moteur.s

GPIO_5 00000020

Symbol: GPIO_5
   Definitions
      At line 18 in file RK_Config_Moteur.s
   Uses
      At line 222 in file RK_Config_Moteur.s
      At line 227 in file RK_Config_Moteur.s
      At line 232 in file RK_Config_Moteur.s
      At line 235 in file RK_Config_Moteur.s
      At line 236 in file RK_Config_Moteur.s

PORTD_BASE 40007000

Symbol: PORTD_BASE
   Definitions
      At line 25 in file RK_Config_Moteur.s
   Uses
      At line 26 in file RK_Config_Moteur.s
      At line 27 in file RK_Config_Moteur.s
      At line 28 in file RK_Config_Moteur.s
      At line 29 in file RK_Config_Moteur.s
      At line 30 in file RK_Config_Moteur.s
      At line 31 in file RK_Config_Moteur.s

PORTH_BASE 40027000

Symbol: PORTH_BASE
   Definitions
      At line 33 in file RK_Config_Moteur.s
   Uses
      At line 34 in file RK_Config_Moteur.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 35 in file RK_Config_Moteur.s
      At line 36 in file RK_Config_Moteur.s
      At line 37 in file RK_Config_Moteur.s
      At line 38 in file RK_Config_Moteur.s
      At line 39 in file RK_Config_Moteur.s

PWM0CMPA 40028058

Symbol: PWM0CMPA
   Definitions
      At line 48 in file RK_Config_Moteur.s
   Uses
      At line 164 in file RK_Config_Moteur.s
Comment: PWM0CMPA used once
PWM0CMPB 4002805C

Symbol: PWM0CMPB
   Definitions
      At line 49 in file RK_Config_Moteur.s
   Uses
      At line 168 in file RK_Config_Moteur.s
Comment: PWM0CMPB used once
PWM0CTL 40028040

Symbol: PWM0CTL
   Definitions
      At line 46 in file RK_Config_Moteur.s
   Uses
      At line 144 in file RK_Config_Moteur.s
      At line 173 in file RK_Config_Moteur.s

PWM0GENA 40028060

Symbol: PWM0GENA
   Definitions
      At line 50 in file RK_Config_Moteur.s
   Uses
      At line 148 in file RK_Config_Moteur.s
Comment: PWM0GENA used once
PWM0GENB 40028064

Symbol: PWM0GENB
   Definitions
      At line 51 in file RK_Config_Moteur.s
   Uses
      At line 153 in file RK_Config_Moteur.s
Comment: PWM0GENB used once
PWM0LOAD 40028050

Symbol: PWM0LOAD
   Definitions
      At line 47 in file RK_Config_Moteur.s
   Uses
      At line 160 in file RK_Config_Moteur.s
Comment: PWM0LOAD used once
PWM1CMPA 40028098

Symbol: PWM1CMPA
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 56 in file RK_Config_Moteur.s
   Uses
      At line 203 in file RK_Config_Moteur.s
Comment: PWM1CMPA used once
PWM1CMPB 4002809C

Symbol: PWM1CMPB
   Definitions
      At line 57 in file RK_Config_Moteur.s
   Uses
      At line 207 in file RK_Config_Moteur.s
Comment: PWM1CMPB used once
PWM1CTL 40028080

Symbol: PWM1CTL
   Definitions
      At line 54 in file RK_Config_Moteur.s
   Uses
      At line 181 in file RK_Config_Moteur.s
      At line 212 in file RK_Config_Moteur.s

PWM1GENA 400280A0

Symbol: PWM1GENA
   Definitions
      At line 58 in file RK_Config_Moteur.s
   Uses
      At line 185 in file RK_Config_Moteur.s
Comment: PWM1GENA used once
PWM1GENB 400280A4

Symbol: PWM1GENB
   Definitions
      At line 59 in file RK_Config_Moteur.s
   Uses
      At line 191 in file RK_Config_Moteur.s
Comment: PWM1GENB used once
PWM1LOAD 40028090

Symbol: PWM1LOAD
   Definitions
      At line 55 in file RK_Config_Moteur.s
   Uses
      At line 199 in file RK_Config_Moteur.s
Comment: PWM1LOAD used once
PWMENABLE 40028008

Symbol: PWMENABLE
   Definitions
      At line 43 in file RK_Config_Moteur.s
   Uses
      At line 263 in file RK_Config_Moteur.s
      At line 270 in file RK_Config_Moteur.s
      At line 277 in file RK_Config_Moteur.s
      At line 284 in file RK_Config_Moteur.s

PWM_BASE 40028000

Symbol: PWM_BASE



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 42 in file RK_Config_Moteur.s
   Uses
      At line 43 in file RK_Config_Moteur.s
      At line 46 in file RK_Config_Moteur.s
      At line 47 in file RK_Config_Moteur.s
      At line 48 in file RK_Config_Moteur.s
      At line 49 in file RK_Config_Moteur.s
      At line 50 in file RK_Config_Moteur.s
      At line 51 in file RK_Config_Moteur.s
      At line 54 in file RK_Config_Moteur.s
      At line 55 in file RK_Config_Moteur.s
      At line 56 in file RK_Config_Moteur.s
      At line 57 in file RK_Config_Moteur.s
      At line 58 in file RK_Config_Moteur.s
      At line 59 in file RK_Config_Moteur.s

SYSCTL_RCGC0 400FE100

Symbol: SYSCTL_RCGC0
   Definitions
      At line 21 in file RK_Config_Moteur.s
   Uses
      At line 88 in file RK_Config_Moteur.s
Comment: SYSCTL_RCGC0 used once
SYSCTL_RCGC2 400FE108

Symbol: SYSCTL_RCGC2
   Definitions
      At line 22 in file RK_Config_Moteur.s
   Uses
      At line 98 in file RK_Config_Moteur.s
      At line 104 in file RK_Config_Moteur.s

VITESSE 00000199

Symbol: VITESSE
   Definitions
      At line 62 in file RK_Config_Moteur.s
   Uses
      At line 165 in file RK_Config_Moteur.s
      At line 204 in file RK_Config_Moteur.s

35 symbols
385 symbols in table
